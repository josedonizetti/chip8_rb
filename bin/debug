#!/usr/bin/env ruby
require 'chip8'

@program = File.open(ARGV.shift) {|file| file.read }.unpack("C*")
@vm = Chip8::VM.new(@program)

def execute_command(command)
  case command
  when "help", "h"
  when "step", "s"
    @vm.step
    byte1 = @program[@vm.pc - 512]
    byte2 = @program[(@vm.pc + 1) - 512]
    puts Opcode.new(byte1, byte2).parse
  when "continue", "c"
    @vm.execute
  when "breakpoint", "bp"
  when "registers", "r"
    puts @vm.registers.inspect
  when "memory", "m"
    puts @vm.memory.inspect
  when "where", "w"
    byte1 = @program[@vm.pc - 512]
    byte2 = @program[(@vm.pc + 1) - 512]
    puts Opcode.new(byte1, byte2).parse
  when "program_counter","pc"
    puts @vm.pc
  when "stack_pointer", "sp"
    puts @vm.sp
  when "delay_timer", "dt"
    puts @vm.dt
  when "sound_timer", "st"
    puts @vm.st
  when "I", "i"
    puts @vm.i
  when "stack"
    puts @vm.stack.inspect
  else
    puts "Command not found. Try help."
  end
end

while true
  print "> "
  command = gets.chomp
  execute_command(command)
end
